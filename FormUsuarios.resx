<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABM9JREFUeF7t
        nF9oW1Ucx+u/iRPcg3+Ygr4pPgjim7hVhjgFISfNJLCpg6SFMARx4ssYJLvgBnO51rIhW9/64IMUK/XB
        5qadtA6U4p89KcwJ05cpe+tedJa6n9/T/uZKclz/JLn3Juf7gQ+kSe45v/M9uffcmybpI4QQQgghhBBC
        CGkd+b60Veq5p6RmjESZg8va2/Y+PKZPI51CJH+HRNl+eExqmfPwOpT/0T72w8pzczvtttoMaRURuQ3h
        7oOXNOzNiG3NXtuWNks2g0ybHQjyO0fAmxRtoU1tnmwEicy7CHGpOdSWXULbb2s3ZC3km/w9WKA/cQTZ
        Zs3H8lN+i3ZLXIgEt8tUZtodYCc047ZP7Z40gj3juDu4Doo+tXuyGpyiFp2BxaLJaxnEIvOv34dQrrjD
        isU/ZCa/TcshmIzAEVLMmkDL8Rup5x5CIFebA4pbsyCz+e1alr9ILXvIHVACRpmDWpa/yJSZd4aTiCbS
        svxEoj0PI4hbvUkYr1OZv71e3PGKfMMZTKKavVqef6Rq/fjP7CEtzz+wfoy4Q0lQ1KTl+QcCmGwKJHkn
        tTz/SNcZloqatDz/wAI65gwlUc2Ylucfiby7u6Yev4Vir4zdoSRoZA5oef4hM5lnnaEkKWrS8vxDP1Fy
        uSmUxDS/e//JFARxpjmYxDyjZfmLRNkXHcEk5MAuLctvEMZcczixO6flEKmb5x0BxWs9+5yWQyxYUCec
        QcWimdAyyA3kXP5BBPOzO7AOOpW5KLP7HtAyyGrkbO4JhBTn/9evyvSrj2v3xIXUsq/gVfunI7x2+5fU
        My9ot+RWyIx5BoevXx0htsvfJMo9rd2R9YDD1/2YlJojzBY1kW1buyEbRaJMFkFeaA52w16Q+sCANkta
        BYEOwbOrAl6vX8IhbYa0G6nvvxeHHSNT5n0s/p8i7PP4e2FF3Lb32cfsnoXn6maEEEIIIYR0A6Xjo9sG
        j4Q7i+WwBN8rlqunCpXqWKFcnSiUT0yviNu4zz628pywNFT+cIfdVpshm8WGXyiHhxHyF/AylBa1baCt
        8LBtW7shLkrB6NbBYPilYqV6FKGdg9c0xE56DXvTV3ZPKlTC3bYGLcdfBoNTjxQr4TsI5msEdL0hsDj9
        B85h73nT1qTl+UMQzN6JV+V+HOt/aQgmDV6ErwWB9P4vPNhBpngiGgx/LAThnp794BwG9yQGWmseeOqt
        2dp1GN3PWydP3o1X2zEMbLFhoN3kol387Vh0WN1JoTzcj8HYY7JrkN0oxjLcr8PrLrBXHMAAlhoG1Ati
        TGH3fGUhCMa34Kr5tGMgPeaJ0+Pj4+n+cc3l09lydbK5+N4UZ4uf2THr8NPFyuLtz2Tc0E5K6hZ7e32B
        s5DPXQV7YaU6lqoLSVzsjTgL9UlkoHEki55NuYv0zoTPvuy7pCikmy/42u1isRK+rPHES/HoB4+igIWG
        gmi5eqV0ZOQxjSkeSqOjd6HjbxsKoTedt9djGlfn4SK+DivVeH4PuBB8tB0d8lC1tgs2K42tc9hzbkfn
        1GWl2vnvvaOTwNk5bRZZaWydgxOyATkhKZMTkjI5ISmTE5IyOSEpkxOSMjkhKZMTkjI5ISkzlgkJqruW
        J4WuLbLS2AghhBBCCCGEEEII6TH6+v4FJa0905Wam8sAAAAASUVORK5CYII=
</value>
  </data>
</root>