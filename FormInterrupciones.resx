<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>